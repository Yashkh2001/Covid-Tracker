{"version":3,"sources":["components/Card.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","useState","latest","setLatest","result","setResults","searchcountry","setSearchCountry","useEffect","axios","all","get","then","responseArr","data","console","log","catch","err","FilterCountry","filter","item","country","toLowerCase","includes","lastupdated","Date","parseInt","updated","toString","countries","map","className","class","src","countryInfo","flag","alt","cases","deaths","recovered","todayDeaths","for","type","onChange","e","target","value","id","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAqIeA,EAlIF,WAAO,IAAD,EAEMC,mBAAS,IAFf,mBAEZC,EAFY,KAELC,EAFK,OAIOF,mBAAS,IAJhB,mBAIZG,EAJY,KAILC,EAJK,OAMoBJ,mBAAS,IAN7B,mBAMZK,EANY,KAMEC,EANF,KAWnBC,qBAAU,WACNC,IAAMC,IAAI,CAACD,IAAME,IAAI,oCACrBF,IAAME,IAAI,4CACTC,MAAK,SAAAC,GACFV,EAAUU,EAAY,GAAGC,MACzBT,EAAWQ,EAAY,GAAGC,MAC1BC,QAAQC,IAAIZ,MACba,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QAEjB,IAGH,IAAMC,EAAcf,EAAOgB,QAAO,SAAAC,GAC9B,MAAwB,KAAjBf,EAAqBe,EAAKC,QAAQC,cAAcC,SAASlB,EAAciB,eAAiBF,KAK7FI,EADK,IAAIC,KAAKC,SAASzB,EAAO0B,UACbC,WAIjBC,EAAUX,EAAcY,KAAI,SAAAjB,GAC9B,OACI,qBAAKkB,UAAU,mBAAf,SACA,sBAAKA,UAAU,sDAAf,UAEA,sBAAKC,MAAM,YAAX,UACA,qBAAKC,IAAKpB,EAAKqB,YAAYC,KAAMC,IAAI,gBACnC,oBAAIJ,MAAM,aAAV,SAAwBnB,EAAKQ,UAC7B,oBAAGW,MAAM,kBAAT,qBAAoCnB,EAAKwB,SACzC,oBAAGL,MAAM,kBAAT,qBAAoCnB,EAAKyB,UACzC,oBAAGN,MAAM,kBAAT,wBAAuCnB,EAAK0B,aAC5C,oBAAGP,MAAM,kBAAT,6BAA4CnB,EAAK2B,kBAEnD,uBACA,yBAAQT,UAAU,cAAlB,0BAA8CP,aAOlD,OACI,8BAER,sBAAKO,UAAU,MAAf,UAEY,qBAAKA,UAAU,mBAAf,SACA,sBAAKC,MAAM,+DAAX,UAEV,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,oBACA,mBAAGA,MAAM,iBAAT,SAA2B/B,EAAOoC,WAEpC,uBACA,yBAAQN,UAAU,cAAlB,0BAA8CP,UAKhD,qBAAKO,UAAU,mBAAf,SACY,sBAAKC,MAAM,4DAAX,UAEV,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,oBACA,mBAAGA,MAAM,iBAAT,SAA2B/B,EAAOqC,YAEpC,uBACA,yBAAQP,UAAU,cAAlB,0BAA8CP,UAKhD,qBAAKO,UAAU,mBAAf,SACY,sBAAKC,MAAM,6DAAX,UAEV,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,uBACA,mBAAGA,MAAM,iBAAT,SAA2B/B,EAAOsC,eAEpC,uBACA,yBAAQR,UAAU,cAAlB,0BAA8CP,UAG/C,oBAAIO,UAAU,SAEd,sBAAKC,MAAM,OAAX,UACC,uBAAOS,IAAI,2BAA2BT,MAAM,aAA5C,oBACA,uBAAOU,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAEtC,EAAiBsC,EAAEC,OAAOC,QAAQd,MAAM,eAAee,GAAG,2BAA2BC,YAAY,4BAKnI,qBAAKjB,UAAU,YAAf,SAEUF,UC/EKoB,MA3Bf,WACE,OACE,qBAAKlB,UAAU,MAAf,SAEE,qBAAKA,UAAU,YAAf,SAOJ,cAAC,EAAD,SCJamB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a661868.chunk.js","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Card = () => {\r\n\r\nconst [latest,setLatest]=useState([]);\r\n\r\nconst [result,setResults]=useState([]);\r\n\r\nconst [searchcountry,setSearchCountry]=useState(\"\");\r\n\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    axios.all([axios.get(\"https://corona.lmao.ninja/v2/all\"),\r\n    axios.get(\"https://corona.lmao.ninja/v2/countries\")])\r\n    .then(responseArr=>{\r\n        setLatest(responseArr[0].data);\r\n        setResults(responseArr[1].data);\r\n        console.log(result);\r\n    }).catch(err=>{\r\n        console.log(err);\r\n    })\r\n}, [])\r\n\r\n\r\nconst FilterCountry=result.filter(item=>{\r\n    return searchcountry!== \"\"? item.country.toLowerCase().includes(searchcountry.toLowerCase()) : item ;\r\n})\r\n\r\n\r\nconst date=new Date(parseInt(latest.updated));\r\nconst lastupdated=date.toString();\r\n\r\n\r\n\r\nconst countries=FilterCountry.map(data=>{\r\n    return(\r\n        <div className=\"col-md-4 mx-auto\">\r\n        <div className=\"card desh text-white bg-dark mb-3 mt-5  text-center\" >\r\n  \r\n        <div class=\"card-body\">\r\n        <img src={data.countryInfo.flag} alt=\"country-img\" />\r\n          <h4 class=\"card-title\">{data.country}</h4>\r\n          <p class=\"card-text1 mt-5\">Active- {data.cases}</p>\r\n          <p class=\"card-text1 mt-2\">Deaths- {data.deaths}</p>\r\n          <p class=\"card-text1 mt-2\">Recovered- {data.recovered}</p>\r\n          <p class=\"card-text1 mt-2\">Today's deaths- {data.todayDeaths}</p>\r\n        </div>\r\n        <hr />\r\n        <footer className=\"text-center\">Last updated {lastupdated}</footer>\r\n      </div>\r\n      </div>\r\n\r\n    )\r\n})\r\n\r\n    return (\r\n        <div>\r\n\r\n<div className=\"row\">\r\n            \r\n            <div className=\"col-md-4 mx-auto\">\r\n            <div class=\"card text-dark bg-secondary mb-3 mt-5 text-white text-center\" >\r\n  \r\n  <div class=\"card-body\">\r\n    <h4 class=\"card-title\">Active</h4>\r\n    <p class=\"card-text mt-4\">{latest.cases}</p>\r\n  </div>\r\n  <hr />\r\n  <footer className=\"text-center\">Last updated {lastupdated}</footer>\r\n</div>\r\n\r\n</div>\r\n\r\n<div className=\"col-md-4 mx-auto\">\r\n            <div class=\"card text-dark bg-danger mb-3 mt-5 text-white text-center\" >\r\n  \r\n  <div class=\"card-body\">\r\n    <h4 class=\"card-title\">Deaths</h4>\r\n    <p class=\"card-text mt-4\">{latest.deaths}</p>\r\n  </div>\r\n  <hr />\r\n  <footer className=\"text-center\">Last updated {lastupdated}</footer>\r\n</div>\r\n\r\n</div>\r\n\r\n<div className=\"col-md-4 mx-auto\">\r\n            <div class=\"card text-dark bg-success mb-3 mt-5 text-white text-center\" >\r\n  \r\n  <div class=\"card-body\">\r\n    <h4 class=\"card-title\">Recovered</h4>\r\n    <p class=\"card-text mt-4\">{latest.recovered}</p>\r\n  </div>\r\n  <hr />\r\n  <footer className=\"text-center\">Last updated {lastupdated}</footer>\r\n</div>\r\n</div>\r\n <hr className=\"mt-3\" />\r\n\r\n <div class=\"mb-3\">\r\n  <label for=\"exampleFormControlInput1\" class=\"form-label\">Search</label>\r\n  <input type=\"text\" onChange={e=>setSearchCountry(e.target.value)} class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Search for a country\"/>\r\n</div>\r\n\r\n\r\n\r\n<div className=\"row mt-10\">\r\n\r\n         {countries}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Card;\r\n","\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Card from './components/Card'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <div className=\"container\">\n      \n        \n        \n\n\n  \n  <Card/>\n  \n\n\n\n\n\n\n  \n      </div>\n\n      </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}